// // importScripts('https://storage.googleapis.com/workbox-cdn/releases/6.1.1/workbox-sw.js');

// import workbox from workbox

// const { CacheFirst, NetworkFirst } = workbox.strategies;
// const { CacheableResponsePlugin } = workbox.cacheableResponse;
// const { ExpirationPlugin } = workbox.expiration;
// const { precacheAndRoute, matchPrecache, cleanupOutdatedCaches } = workbox.precaching;
// const { registerRoute } = workbox.routing;

// // Precache the app shell and static assets generated by Webpack
// precacheAndRoute(self.__WB_MANIFEST);

// // Cache Google Fonts with a stale-while-revalidate strategy
// registerRoute(
//   ({ url }) => url.origin === 'https://fonts.googleapis.com',
//   new CacheFirst({
//     cacheName: 'google-fonts',
//     plugins: [
//       new CacheableResponsePlugin({ statuses: [0, 200] }),
//       new ExpirationPlugin({ maxAgeSeconds: 60 * 60 * 24 * 365 }),
//     ],
//   }),
// );

// // Cache API responses with a network-first strategy
// registerRoute(
//   ({ url }) => url.origin === 'https://jsonplaceholder.typicode.com',
//   new NetworkFirst({
//     cacheName: 'api-responses',
//     plugins: [
//       new CacheableResponsePlugin({ statuses: [0, 200] }),
//       new ExpirationPlugin({ maxAgeSeconds: 60 * 60 }),
//     ],
//   }),
// );

// // Clean up old cache versions
// cleanupOutdatedCaches();

// // Respond to navigation requests with the cached app shell
// self.addEventListener('fetch', (event) => {
//   const { pathname } = new URL(event.request.url);
//   if (pathname === '/') {
//     event.respondWith(matchPrecache('/index.html'));
//   }
// });


import { precacheAndRoute } from 'workbox-precaching';

precacheAndRoute(self.__WB_MANIFEST);